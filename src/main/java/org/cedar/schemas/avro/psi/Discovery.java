/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.cedar.schemas.avro.psi;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
/** The shape of the discovery object generated within Inventory Manager for a successfully parsed metadata document. This is the internal metadata format used within the system and ultimately sent downstream to OneStop. */
@org.apache.avro.specific.AvroGenerated
public class Discovery extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4262377865061686636L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Discovery\",\"namespace\":\"org.cedar.psi.common.avro\",\"doc\":\"The shape of the discovery object generated within Inventory Manager for a successfully parsed metadata document. This is the internal metadata format used within the system and ultimately sent downstream to OneStop.\",\"fields\":[{\"name\":\"fileIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"parentIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"hierarchyLevelName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"doi\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"purpose\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"credit\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"alternateTitle\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"keywords\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"KeywordsElement\",\"fields\":[{\"name\":\"values\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"type\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"namespace\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},\"default\":[]},{\"name\":\"topicCategories\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"temporalBounding\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"TemporalBounding\",\"fields\":[{\"name\":\"beginDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"beginIndeterminate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"endIndeterminate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"instant\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"instantIndeterminate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}],\"default\":null},{\"name\":\"spatialBounding\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Point\",\"doc\":\"A single position described with two values: longitude then latitude. A third (optional) value for elevation is allowed.\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"PointType\",\"symbols\":[\"Point\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":[\"double\"]},\"default\":[]}]},{\"type\":\"record\",\"name\":\"MultiPoint\",\"doc\":\"An array of UNCONNECTED positions, each described with two values: longitude then latitude. A third (optional) value for elevation is allowed per position.\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"MultiPointType\",\"symbols\":[\"MultiPoint\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"array\",\"items\":[\"double\"]}]},\"default\":[]}]},{\"type\":\"record\",\"name\":\"LineString\",\"doc\":\"An array of two or more CONNECTED positions, each described with two values: longitude then latitude. A third (optional) value for elevation is allowed per position. A LineString may self-cross.\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"LineStringType\",\"symbols\":[\"LineString\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"array\",\"items\":[\"double\"]}]},\"default\":[]}]},{\"type\":\"record\",\"name\":\"MultiLineString\",\"doc\":\"An array of separate linestrings. A linestring is an array of two or more CONNECTED positions, each described with two values: longitude then latitude. A third (optional) value for elevation is allowed per position. Linestrings may self-cross.\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"MultiLineStringType\",\"symbols\":[\"MultiLineString\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"array\",\"items\":[{\"type\":\"array\",\"items\":\"double\"}]}]},\"default\":[]}]},{\"type\":\"record\",\"name\":\"Polygon\",\"doc\":\"An array of linear rings, which are linestrings of four or more positions that are CLOSED, meaning the first and last positions are identical. The first (required) linear ring describes the polygon's exterior boundary. Subsequent (optional) linear rings describe holes in the polygon. Point positions MUST follow the right-hand rule for order, i.e., exterior rings are counterclockwise and holes are clockwise. Each point must be described with two values: longitude then latitude. A third (optional) value for elevation is allowed per position.\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"PolygonType\",\"symbols\":[\"Polygon\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"array\",\"items\":[{\"type\":\"array\",\"items\":\"double\"}]}]},\"default\":[]}]},{\"type\":\"record\",\"name\":\"MultiPolygon\",\"doc\":\"An array of separate polygons. A polygon is an array of linear rings, which are linestrings of four or more positions that are CLOSED, meaning the first and last positions are identical. The first (required) linear ring describes the polygon's exterior boundary. Subsequent (optional) linear rings describe holes in the polygon. Point positions MUST follow the right-hand rule for order, i.e., exterior rings are counterclockwise and holes are clockwise. Each point must be described with two values: longitude then latitude. A third (optional) value for elevation is allowed per position.\",\"fields\":[{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"MultiPolygonType\",\"symbols\":[\"MultiPolygon\"]}},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":[{\"type\":\"array\",\"items\":[{\"type\":\"array\",\"items\":[{\"type\":\"array\",\"items\":\"double\"}]}]}]},\"default\":[]}]}],\"default\":null},{\"name\":\"isGlobal\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"acquisitionInstruments\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Instruments\",\"fields\":[{\"name\":\"instrumentIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"instrumentType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"instrumentDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},\"default\":[]},{\"name\":\"acquisitionOperations\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Operation\",\"fields\":[{\"name\":\"operationDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"operationIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"operationStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"operationType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},\"default\":[]},{\"name\":\"acquisitionPlatforms\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Platform\",\"fields\":[{\"name\":\"platformIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"platformDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"platformSponsor\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]}]}},\"default\":[]},{\"name\":\"dataFormats\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"DataFormat\",\"fields\":[{\"name\":\"name\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"version\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},\"default\":[]},{\"name\":\"links\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Link\",\"fields\":[{\"name\":\"linkName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"linkProtocol\",\"type\":[\"","null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"linkUrl\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"linkDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"linkFunction\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},\"default\":[]},{\"name\":\"responsibleParties\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"ResponsibleParty\",\"fields\":[{\"name\":\"individualName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organizationName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"positionName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"role\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"email\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"phone\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}},\"default\":[]},{\"name\":\"thumbnail\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"thumbnailDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"creationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"revisionDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"publicationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"citeAsStatements\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"crossReferences\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Reference\",\"fields\":[{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"date\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"links\",\"type\":{\"type\":\"array\",\"items\":\"Link\"},\"default\":[]}]}},\"default\":[]},{\"name\":\"largerWorks\",\"type\":{\"type\":\"array\",\"items\":\"Reference\"},\"default\":[]},{\"name\":\"useLimitation\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"legalConstraints\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]},{\"name\":\"accessFeeStatement\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderingInstructions\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"edition\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dsmmAccessibility\",\"type\":\"int\",\"default\":0},{\"name\":\"dsmmDataIntegrity\",\"type\":\"int\",\"default\":0},{\"name\":\"dsmmDataQualityAssessment\",\"type\":\"int\",\"default\":0},{\"name\":\"dsmmDataQualityAssurance\",\"type\":\"int\",\"default\":0},{\"name\":\"dsmmDataQualityControlMonitoring\",\"type\":\"int\",\"default\":0},{\"name\":\"dsmmPreservability\",\"type\":\"int\",\"default\":0},{\"name\":\"dsmmProductionSustainability\",\"type\":\"int\",\"default\":0},{\"name\":\"dsmmTransparencyTraceability\",\"type\":\"int\",\"default\":0},{\"name\":\"dsmmUsability\",\"type\":\"int\",\"default\":0},{\"name\":\"dsmmAverage\",\"type\":\"float\",\"doc\":\"Calculated mean average of individual DSMM scores for Accessibility, Data Integrity, Data Quality Assessment, Data Quality Assurance, Data Quality Control Monitoring, Preservability, Production Sustainability, Transparency Traceability, and Usability.\",\"default\":0},{\"name\":\"updateFrequency\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"presentationForm\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"services\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Service\",\"fields\":[{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"alternateTitle\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"description\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"date\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"dateType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"pointOfContact\",\"type\":[\"null\",\"ResponsibleParty\"],\"default\":null},{\"name\":\"operations\",\"type\":{\"type\":\"array\",\"items\":\"Link\"},\"default\":[]}]}},\"doc\":\"List of objects that represent an SV_ServiceIdentification section, if any, of ISO 19115 XML metadata document. Empty if not present.\",\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private String fileIdentifier;
   private String parentIdentifier;
   private String hierarchyLevelName;
   private String doi;
   private String purpose;
   private String status;
   private String credit;
   private String title;
   private String alternateTitle;
   private String description;
   private java.util.List<KeywordsElement> keywords;
   private java.util.List<String> topicCategories;
   private TemporalBounding temporalBounding;
   private Object spatialBounding;
   private Boolean isGlobal;
   private java.util.List<Instruments> acquisitionInstruments;
   private java.util.List<Operation> acquisitionOperations;
   private java.util.List<Platform> acquisitionPlatforms;
   private java.util.List<DataFormat> dataFormats;
   private java.util.List<Link> links;
   private java.util.List<ResponsibleParty> responsibleParties;
   private String thumbnail;
   private String thumbnailDescription;
   private String creationDate;
   private String revisionDate;
   private String publicationDate;
   private java.util.List<String> citeAsStatements;
   private java.util.List<Reference> crossReferences;
   private java.util.List<Reference> largerWorks;
   private String useLimitation;
   private java.util.List<String> legalConstraints;
   private String accessFeeStatement;
   private String orderingInstructions;
   private String edition;
   private int dsmmAccessibility;
   private int dsmmDataIntegrity;
   private int dsmmDataQualityAssessment;
   private int dsmmDataQualityAssurance;
   private int dsmmDataQualityControlMonitoring;
   private int dsmmPreservability;
   private int dsmmProductionSustainability;
   private int dsmmTransparencyTraceability;
   private int dsmmUsability;
  /** Calculated mean average of individual DSMM scores for Accessibility, Data Integrity, Data Quality Assessment, Data Quality Assurance, Data Quality Control Monitoring, Preservability, Production Sustainability, Transparency Traceability, and Usability. */
   private float dsmmAverage;
   private String updateFrequency;
   private String presentationForm;
  /** List of objects that represent an SV_ServiceIdentification section, if any, of ISO 19115 XML metadata document. Empty if not present. */
   private java.util.List<Service> services;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Discovery() {}

  /**
   * All-args constructor.
   * @param fileIdentifier The new value for fileIdentifier
   * @param parentIdentifier The new value for parentIdentifier
   * @param hierarchyLevelName The new value for hierarchyLevelName
   * @param doi The new value for doi
   * @param purpose The new value for purpose
   * @param status The new value for status
   * @param credit The new value for credit
   * @param title The new value for title
   * @param alternateTitle The new value for alternateTitle
   * @param description The new value for description
   * @param keywords The new value for keywords
   * @param topicCategories The new value for topicCategories
   * @param temporalBounding The new value for temporalBounding
   * @param spatialBounding The new value for spatialBounding
   * @param isGlobal The new value for isGlobal
   * @param acquisitionInstruments The new value for acquisitionInstruments
   * @param acquisitionOperations The new value for acquisitionOperations
   * @param acquisitionPlatforms The new value for acquisitionPlatforms
   * @param dataFormats The new value for dataFormats
   * @param links The new value for links
   * @param responsibleParties The new value for responsibleParties
   * @param thumbnail The new value for thumbnail
   * @param thumbnailDescription The new value for thumbnailDescription
   * @param creationDate The new value for creationDate
   * @param revisionDate The new value for revisionDate
   * @param publicationDate The new value for publicationDate
   * @param citeAsStatements The new value for citeAsStatements
   * @param crossReferences The new value for crossReferences
   * @param largerWorks The new value for largerWorks
   * @param useLimitation The new value for useLimitation
   * @param legalConstraints The new value for legalConstraints
   * @param accessFeeStatement The new value for accessFeeStatement
   * @param orderingInstructions The new value for orderingInstructions
   * @param edition The new value for edition
   * @param dsmmAccessibility The new value for dsmmAccessibility
   * @param dsmmDataIntegrity The new value for dsmmDataIntegrity
   * @param dsmmDataQualityAssessment The new value for dsmmDataQualityAssessment
   * @param dsmmDataQualityAssurance The new value for dsmmDataQualityAssurance
   * @param dsmmDataQualityControlMonitoring The new value for dsmmDataQualityControlMonitoring
   * @param dsmmPreservability The new value for dsmmPreservability
   * @param dsmmProductionSustainability The new value for dsmmProductionSustainability
   * @param dsmmTransparencyTraceability The new value for dsmmTransparencyTraceability
   * @param dsmmUsability The new value for dsmmUsability
   * @param dsmmAverage Calculated mean average of individual DSMM scores for Accessibility, Data Integrity, Data Quality Assessment, Data Quality Assurance, Data Quality Control Monitoring, Preservability, Production Sustainability, Transparency Traceability, and Usability.
   * @param updateFrequency The new value for updateFrequency
   * @param presentationForm The new value for presentationForm
   * @param services List of objects that represent an SV_ServiceIdentification section, if any, of ISO 19115 XML metadata document. Empty if not present.
   */
  public Discovery(String fileIdentifier, String parentIdentifier, String hierarchyLevelName, String doi, String purpose, String status, String credit, String title, String alternateTitle, String description, java.util.List<KeywordsElement> keywords, java.util.List<String> topicCategories, TemporalBounding temporalBounding, Object spatialBounding, Boolean isGlobal, java.util.List<Instruments> acquisitionInstruments, java.util.List<Operation> acquisitionOperations, java.util.List<Platform> acquisitionPlatforms, java.util.List<DataFormat> dataFormats, java.util.List<Link> links, java.util.List<ResponsibleParty> responsibleParties, String thumbnail, String thumbnailDescription, String creationDate, String revisionDate, String publicationDate, java.util.List<String> citeAsStatements, java.util.List<Reference> crossReferences, java.util.List<Reference> largerWorks, String useLimitation, java.util.List<String> legalConstraints, String accessFeeStatement, String orderingInstructions, String edition, Integer dsmmAccessibility, Integer dsmmDataIntegrity, Integer dsmmDataQualityAssessment, Integer dsmmDataQualityAssurance, Integer dsmmDataQualityControlMonitoring, Integer dsmmPreservability, Integer dsmmProductionSustainability, Integer dsmmTransparencyTraceability, Integer dsmmUsability, Float dsmmAverage, String updateFrequency, String presentationForm, java.util.List<Service> services) {
    this.fileIdentifier = fileIdentifier;
    this.parentIdentifier = parentIdentifier;
    this.hierarchyLevelName = hierarchyLevelName;
    this.doi = doi;
    this.purpose = purpose;
    this.status = status;
    this.credit = credit;
    this.title = title;
    this.alternateTitle = alternateTitle;
    this.description = description;
    this.keywords = keywords;
    this.topicCategories = topicCategories;
    this.temporalBounding = temporalBounding;
    this.spatialBounding = spatialBounding;
    this.isGlobal = isGlobal;
    this.acquisitionInstruments = acquisitionInstruments;
    this.acquisitionOperations = acquisitionOperations;
    this.acquisitionPlatforms = acquisitionPlatforms;
    this.dataFormats = dataFormats;
    this.links = links;
    this.responsibleParties = responsibleParties;
    this.thumbnail = thumbnail;
    this.thumbnailDescription = thumbnailDescription;
    this.creationDate = creationDate;
    this.revisionDate = revisionDate;
    this.publicationDate = publicationDate;
    this.citeAsStatements = citeAsStatements;
    this.crossReferences = crossReferences;
    this.largerWorks = largerWorks;
    this.useLimitation = useLimitation;
    this.legalConstraints = legalConstraints;
    this.accessFeeStatement = accessFeeStatement;
    this.orderingInstructions = orderingInstructions;
    this.edition = edition;
    this.dsmmAccessibility = dsmmAccessibility;
    this.dsmmDataIntegrity = dsmmDataIntegrity;
    this.dsmmDataQualityAssessment = dsmmDataQualityAssessment;
    this.dsmmDataQualityAssurance = dsmmDataQualityAssurance;
    this.dsmmDataQualityControlMonitoring = dsmmDataQualityControlMonitoring;
    this.dsmmPreservability = dsmmPreservability;
    this.dsmmProductionSustainability = dsmmProductionSustainability;
    this.dsmmTransparencyTraceability = dsmmTransparencyTraceability;
    this.dsmmUsability = dsmmUsability;
    this.dsmmAverage = dsmmAverage;
    this.updateFrequency = updateFrequency;
    this.presentationForm = presentationForm;
    this.services = services;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return fileIdentifier;
    case 1: return parentIdentifier;
    case 2: return hierarchyLevelName;
    case 3: return doi;
    case 4: return purpose;
    case 5: return status;
    case 6: return credit;
    case 7: return title;
    case 8: return alternateTitle;
    case 9: return description;
    case 10: return keywords;
    case 11: return topicCategories;
    case 12: return temporalBounding;
    case 13: return spatialBounding;
    case 14: return isGlobal;
    case 15: return acquisitionInstruments;
    case 16: return acquisitionOperations;
    case 17: return acquisitionPlatforms;
    case 18: return dataFormats;
    case 19: return links;
    case 20: return responsibleParties;
    case 21: return thumbnail;
    case 22: return thumbnailDescription;
    case 23: return creationDate;
    case 24: return revisionDate;
    case 25: return publicationDate;
    case 26: return citeAsStatements;
    case 27: return crossReferences;
    case 28: return largerWorks;
    case 29: return useLimitation;
    case 30: return legalConstraints;
    case 31: return accessFeeStatement;
    case 32: return orderingInstructions;
    case 33: return edition;
    case 34: return dsmmAccessibility;
    case 35: return dsmmDataIntegrity;
    case 36: return dsmmDataQualityAssessment;
    case 37: return dsmmDataQualityAssurance;
    case 38: return dsmmDataQualityControlMonitoring;
    case 39: return dsmmPreservability;
    case 40: return dsmmProductionSustainability;
    case 41: return dsmmTransparencyTraceability;
    case 42: return dsmmUsability;
    case 43: return dsmmAverage;
    case 44: return updateFrequency;
    case 45: return presentationForm;
    case 46: return services;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: fileIdentifier = (String)value$; break;
    case 1: parentIdentifier = (String)value$; break;
    case 2: hierarchyLevelName = (String)value$; break;
    case 3: doi = (String)value$; break;
    case 4: purpose = (String)value$; break;
    case 5: status = (String)value$; break;
    case 6: credit = (String)value$; break;
    case 7: title = (String)value$; break;
    case 8: alternateTitle = (String)value$; break;
    case 9: description = (String)value$; break;
    case 10: keywords = (java.util.List<KeywordsElement>)value$; break;
    case 11: topicCategories = (java.util.List<String>)value$; break;
    case 12: temporalBounding = (TemporalBounding)value$; break;
    case 13: spatialBounding = (Object)value$; break;
    case 14: isGlobal = (Boolean)value$; break;
    case 15: acquisitionInstruments = (java.util.List<Instruments>)value$; break;
    case 16: acquisitionOperations = (java.util.List<Operation>)value$; break;
    case 17: acquisitionPlatforms = (java.util.List<Platform>)value$; break;
    case 18: dataFormats = (java.util.List<DataFormat>)value$; break;
    case 19: links = (java.util.List<Link>)value$; break;
    case 20: responsibleParties = (java.util.List<ResponsibleParty>)value$; break;
    case 21: thumbnail = (String)value$; break;
    case 22: thumbnailDescription = (String)value$; break;
    case 23: creationDate = (String)value$; break;
    case 24: revisionDate = (String)value$; break;
    case 25: publicationDate = (String)value$; break;
    case 26: citeAsStatements = (java.util.List<String>)value$; break;
    case 27: crossReferences = (java.util.List<Reference>)value$; break;
    case 28: largerWorks = (java.util.List<Reference>)value$; break;
    case 29: useLimitation = (String)value$; break;
    case 30: legalConstraints = (java.util.List<String>)value$; break;
    case 31: accessFeeStatement = (String)value$; break;
    case 32: orderingInstructions = (String)value$; break;
    case 33: edition = (String)value$; break;
    case 34: dsmmAccessibility = (Integer)value$; break;
    case 35: dsmmDataIntegrity = (Integer)value$; break;
    case 36: dsmmDataQualityAssessment = (Integer)value$; break;
    case 37: dsmmDataQualityAssurance = (Integer)value$; break;
    case 38: dsmmDataQualityControlMonitoring = (Integer)value$; break;
    case 39: dsmmPreservability = (Integer)value$; break;
    case 40: dsmmProductionSustainability = (Integer)value$; break;
    case 41: dsmmTransparencyTraceability = (Integer)value$; break;
    case 42: dsmmUsability = (Integer)value$; break;
    case 43: dsmmAverage = (Float)value$; break;
    case 44: updateFrequency = (String)value$; break;
    case 45: presentationForm = (String)value$; break;
    case 46: services = (java.util.List<Service>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'fileIdentifier' field.
   * @return The value of the 'fileIdentifier' field.
   */
  public String getFileIdentifier() {
    return fileIdentifier;
  }


  /**
   * Gets the value of the 'parentIdentifier' field.
   * @return The value of the 'parentIdentifier' field.
   */
  public String getParentIdentifier() {
    return parentIdentifier;
  }


  /**
   * Gets the value of the 'hierarchyLevelName' field.
   * @return The value of the 'hierarchyLevelName' field.
   */
  public String getHierarchyLevelName() {
    return hierarchyLevelName;
  }


  /**
   * Gets the value of the 'doi' field.
   * @return The value of the 'doi' field.
   */
  public String getDoi() {
    return doi;
  }


  /**
   * Gets the value of the 'purpose' field.
   * @return The value of the 'purpose' field.
   */
  public String getPurpose() {
    return purpose;
  }


  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public String getStatus() {
    return status;
  }


  /**
   * Gets the value of the 'credit' field.
   * @return The value of the 'credit' field.
   */
  public String getCredit() {
    return credit;
  }


  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public String getTitle() {
    return title;
  }


  /**
   * Gets the value of the 'alternateTitle' field.
   * @return The value of the 'alternateTitle' field.
   */
  public String getAlternateTitle() {
    return alternateTitle;
  }


  /**
   * Gets the value of the 'description' field.
   * @return The value of the 'description' field.
   */
  public String getDescription() {
    return description;
  }


  /**
   * Gets the value of the 'keywords' field.
   * @return The value of the 'keywords' field.
   */
  public java.util.List<KeywordsElement> getKeywords() {
    return keywords;
  }


  /**
   * Gets the value of the 'topicCategories' field.
   * @return The value of the 'topicCategories' field.
   */
  public java.util.List<String> getTopicCategories() {
    return topicCategories;
  }


  /**
   * Gets the value of the 'temporalBounding' field.
   * @return The value of the 'temporalBounding' field.
   */
  public TemporalBounding getTemporalBounding() {
    return temporalBounding;
  }


  /**
   * Gets the value of the 'spatialBounding' field.
   * @return The value of the 'spatialBounding' field.
   */
  public Object getSpatialBounding() {
    return spatialBounding;
  }


  /**
   * Gets the value of the 'isGlobal' field.
   * @return The value of the 'isGlobal' field.
   */
  public Boolean getIsGlobal() {
    return isGlobal;
  }


  /**
   * Gets the value of the 'acquisitionInstruments' field.
   * @return The value of the 'acquisitionInstruments' field.
   */
  public java.util.List<Instruments> getAcquisitionInstruments() {
    return acquisitionInstruments;
  }


  /**
   * Gets the value of the 'acquisitionOperations' field.
   * @return The value of the 'acquisitionOperations' field.
   */
  public java.util.List<Operation> getAcquisitionOperations() {
    return acquisitionOperations;
  }


  /**
   * Gets the value of the 'acquisitionPlatforms' field.
   * @return The value of the 'acquisitionPlatforms' field.
   */
  public java.util.List<Platform> getAcquisitionPlatforms() {
    return acquisitionPlatforms;
  }


  /**
   * Gets the value of the 'dataFormats' field.
   * @return The value of the 'dataFormats' field.
   */
  public java.util.List<DataFormat> getDataFormats() {
    return dataFormats;
  }


  /**
   * Gets the value of the 'links' field.
   * @return The value of the 'links' field.
   */
  public java.util.List<Link> getLinks() {
    return links;
  }


  /**
   * Gets the value of the 'responsibleParties' field.
   * @return The value of the 'responsibleParties' field.
   */
  public java.util.List<ResponsibleParty> getResponsibleParties() {
    return responsibleParties;
  }


  /**
   * Gets the value of the 'thumbnail' field.
   * @return The value of the 'thumbnail' field.
   */
  public String getThumbnail() {
    return thumbnail;
  }


  /**
   * Gets the value of the 'thumbnailDescription' field.
   * @return The value of the 'thumbnailDescription' field.
   */
  public String getThumbnailDescription() {
    return thumbnailDescription;
  }


  /**
   * Gets the value of the 'creationDate' field.
   * @return The value of the 'creationDate' field.
   */
  public String getCreationDate() {
    return creationDate;
  }


  /**
   * Gets the value of the 'revisionDate' field.
   * @return The value of the 'revisionDate' field.
   */
  public String getRevisionDate() {
    return revisionDate;
  }


  /**
   * Gets the value of the 'publicationDate' field.
   * @return The value of the 'publicationDate' field.
   */
  public String getPublicationDate() {
    return publicationDate;
  }


  /**
   * Gets the value of the 'citeAsStatements' field.
   * @return The value of the 'citeAsStatements' field.
   */
  public java.util.List<String> getCiteAsStatements() {
    return citeAsStatements;
  }


  /**
   * Gets the value of the 'crossReferences' field.
   * @return The value of the 'crossReferences' field.
   */
  public java.util.List<Reference> getCrossReferences() {
    return crossReferences;
  }


  /**
   * Gets the value of the 'largerWorks' field.
   * @return The value of the 'largerWorks' field.
   */
  public java.util.List<Reference> getLargerWorks() {
    return largerWorks;
  }


  /**
   * Gets the value of the 'useLimitation' field.
   * @return The value of the 'useLimitation' field.
   */
  public String getUseLimitation() {
    return useLimitation;
  }


  /**
   * Gets the value of the 'legalConstraints' field.
   * @return The value of the 'legalConstraints' field.
   */
  public java.util.List<String> getLegalConstraints() {
    return legalConstraints;
  }


  /**
   * Gets the value of the 'accessFeeStatement' field.
   * @return The value of the 'accessFeeStatement' field.
   */
  public String getAccessFeeStatement() {
    return accessFeeStatement;
  }


  /**
   * Gets the value of the 'orderingInstructions' field.
   * @return The value of the 'orderingInstructions' field.
   */
  public String getOrderingInstructions() {
    return orderingInstructions;
  }


  /**
   * Gets the value of the 'edition' field.
   * @return The value of the 'edition' field.
   */
  public String getEdition() {
    return edition;
  }


  /**
   * Gets the value of the 'dsmmAccessibility' field.
   * @return The value of the 'dsmmAccessibility' field.
   */
  public Integer getDsmmAccessibility() {
    return dsmmAccessibility;
  }


  /**
   * Gets the value of the 'dsmmDataIntegrity' field.
   * @return The value of the 'dsmmDataIntegrity' field.
   */
  public Integer getDsmmDataIntegrity() {
    return dsmmDataIntegrity;
  }


  /**
   * Gets the value of the 'dsmmDataQualityAssessment' field.
   * @return The value of the 'dsmmDataQualityAssessment' field.
   */
  public Integer getDsmmDataQualityAssessment() {
    return dsmmDataQualityAssessment;
  }


  /**
   * Gets the value of the 'dsmmDataQualityAssurance' field.
   * @return The value of the 'dsmmDataQualityAssurance' field.
   */
  public Integer getDsmmDataQualityAssurance() {
    return dsmmDataQualityAssurance;
  }


  /**
   * Gets the value of the 'dsmmDataQualityControlMonitoring' field.
   * @return The value of the 'dsmmDataQualityControlMonitoring' field.
   */
  public Integer getDsmmDataQualityControlMonitoring() {
    return dsmmDataQualityControlMonitoring;
  }


  /**
   * Gets the value of the 'dsmmPreservability' field.
   * @return The value of the 'dsmmPreservability' field.
   */
  public Integer getDsmmPreservability() {
    return dsmmPreservability;
  }


  /**
   * Gets the value of the 'dsmmProductionSustainability' field.
   * @return The value of the 'dsmmProductionSustainability' field.
   */
  public Integer getDsmmProductionSustainability() {
    return dsmmProductionSustainability;
  }


  /**
   * Gets the value of the 'dsmmTransparencyTraceability' field.
   * @return The value of the 'dsmmTransparencyTraceability' field.
   */
  public Integer getDsmmTransparencyTraceability() {
    return dsmmTransparencyTraceability;
  }


  /**
   * Gets the value of the 'dsmmUsability' field.
   * @return The value of the 'dsmmUsability' field.
   */
  public Integer getDsmmUsability() {
    return dsmmUsability;
  }


  /**
   * Gets the value of the 'dsmmAverage' field.
   * @return Calculated mean average of individual DSMM scores for Accessibility, Data Integrity, Data Quality Assessment, Data Quality Assurance, Data Quality Control Monitoring, Preservability, Production Sustainability, Transparency Traceability, and Usability.
   */
  public Float getDsmmAverage() {
    return dsmmAverage;
  }


  /**
   * Gets the value of the 'updateFrequency' field.
   * @return The value of the 'updateFrequency' field.
   */
  public String getUpdateFrequency() {
    return updateFrequency;
  }


  /**
   * Gets the value of the 'presentationForm' field.
   * @return The value of the 'presentationForm' field.
   */
  public String getPresentationForm() {
    return presentationForm;
  }


  /**
   * Gets the value of the 'services' field.
   * @return List of objects that represent an SV_ServiceIdentification section, if any, of ISO 19115 XML metadata document. Empty if not present.
   */
  public java.util.List<Service> getServices() {
    return services;
  }


  /**
   * Creates a new Discovery RecordBuilder.
   * @return A new Discovery RecordBuilder
   */
  public static Discovery.Builder newBuilder() {
    return new Discovery.Builder();
  }

  /**
   * Creates a new Discovery RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Discovery RecordBuilder
   */
  public static Discovery.Builder newBuilder(Discovery.Builder other) {
    return new Discovery.Builder(other);
  }

  /**
   * Creates a new Discovery RecordBuilder by copying an existing Discovery instance.
   * @param other The existing instance to copy.
   * @return A new Discovery RecordBuilder
   */
  public static Discovery.Builder newBuilder(Discovery other) {
    return new Discovery.Builder(other);
  }

  /**
   * RecordBuilder for Discovery instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Discovery>
    implements org.apache.avro.data.RecordBuilder<Discovery> {

    private String fileIdentifier;
    private String parentIdentifier;
    private String hierarchyLevelName;
    private String doi;
    private String purpose;
    private String status;
    private String credit;
    private String title;
    private String alternateTitle;
    private String description;
    private java.util.List<KeywordsElement> keywords;
    private java.util.List<String> topicCategories;
    private TemporalBounding temporalBounding;
    private TemporalBounding.Builder temporalBoundingBuilder;
    private Object spatialBounding;
    private Boolean isGlobal;
    private java.util.List<Instruments> acquisitionInstruments;
    private java.util.List<Operation> acquisitionOperations;
    private java.util.List<Platform> acquisitionPlatforms;
    private java.util.List<DataFormat> dataFormats;
    private java.util.List<Link> links;
    private java.util.List<ResponsibleParty> responsibleParties;
    private String thumbnail;
    private String thumbnailDescription;
    private String creationDate;
    private String revisionDate;
    private String publicationDate;
    private java.util.List<String> citeAsStatements;
    private java.util.List<Reference> crossReferences;
    private java.util.List<Reference> largerWorks;
    private String useLimitation;
    private java.util.List<String> legalConstraints;
    private String accessFeeStatement;
    private String orderingInstructions;
    private String edition;
    private int dsmmAccessibility;
    private int dsmmDataIntegrity;
    private int dsmmDataQualityAssessment;
    private int dsmmDataQualityAssurance;
    private int dsmmDataQualityControlMonitoring;
    private int dsmmPreservability;
    private int dsmmProductionSustainability;
    private int dsmmTransparencyTraceability;
    private int dsmmUsability;
    /** Calculated mean average of individual DSMM scores for Accessibility, Data Integrity, Data Quality Assessment, Data Quality Assurance, Data Quality Control Monitoring, Preservability, Production Sustainability, Transparency Traceability, and Usability. */
    private float dsmmAverage;
    private String updateFrequency;
    private String presentationForm;
    /** List of objects that represent an SV_ServiceIdentification section, if any, of ISO 19115 XML metadata document. Empty if not present. */
    private java.util.List<Service> services;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Discovery.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.fileIdentifier)) {
        this.fileIdentifier = data().deepCopy(fields()[0].schema(), other.fileIdentifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.parentIdentifier)) {
        this.parentIdentifier = data().deepCopy(fields()[1].schema(), other.parentIdentifier);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hierarchyLevelName)) {
        this.hierarchyLevelName = data().deepCopy(fields()[2].schema(), other.hierarchyLevelName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.doi)) {
        this.doi = data().deepCopy(fields()[3].schema(), other.doi);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.purpose)) {
        this.purpose = data().deepCopy(fields()[4].schema(), other.purpose);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.status)) {
        this.status = data().deepCopy(fields()[5].schema(), other.status);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.credit)) {
        this.credit = data().deepCopy(fields()[6].schema(), other.credit);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.title)) {
        this.title = data().deepCopy(fields()[7].schema(), other.title);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.alternateTitle)) {
        this.alternateTitle = data().deepCopy(fields()[8].schema(), other.alternateTitle);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.description)) {
        this.description = data().deepCopy(fields()[9].schema(), other.description);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.keywords)) {
        this.keywords = data().deepCopy(fields()[10].schema(), other.keywords);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.topicCategories)) {
        this.topicCategories = data().deepCopy(fields()[11].schema(), other.topicCategories);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.temporalBounding)) {
        this.temporalBounding = data().deepCopy(fields()[12].schema(), other.temporalBounding);
        fieldSetFlags()[12] = true;
      }
      if (other.hasTemporalBoundingBuilder()) {
        this.temporalBoundingBuilder = TemporalBounding.newBuilder(other.getTemporalBoundingBuilder());
      }
      if (isValidValue(fields()[13], other.spatialBounding)) {
        this.spatialBounding = data().deepCopy(fields()[13].schema(), other.spatialBounding);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.isGlobal)) {
        this.isGlobal = data().deepCopy(fields()[14].schema(), other.isGlobal);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.acquisitionInstruments)) {
        this.acquisitionInstruments = data().deepCopy(fields()[15].schema(), other.acquisitionInstruments);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.acquisitionOperations)) {
        this.acquisitionOperations = data().deepCopy(fields()[16].schema(), other.acquisitionOperations);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.acquisitionPlatforms)) {
        this.acquisitionPlatforms = data().deepCopy(fields()[17].schema(), other.acquisitionPlatforms);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.dataFormats)) {
        this.dataFormats = data().deepCopy(fields()[18].schema(), other.dataFormats);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.links)) {
        this.links = data().deepCopy(fields()[19].schema(), other.links);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.responsibleParties)) {
        this.responsibleParties = data().deepCopy(fields()[20].schema(), other.responsibleParties);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.thumbnail)) {
        this.thumbnail = data().deepCopy(fields()[21].schema(), other.thumbnail);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.thumbnailDescription)) {
        this.thumbnailDescription = data().deepCopy(fields()[22].schema(), other.thumbnailDescription);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[23].schema(), other.creationDate);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.revisionDate)) {
        this.revisionDate = data().deepCopy(fields()[24].schema(), other.revisionDate);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.publicationDate)) {
        this.publicationDate = data().deepCopy(fields()[25].schema(), other.publicationDate);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.citeAsStatements)) {
        this.citeAsStatements = data().deepCopy(fields()[26].schema(), other.citeAsStatements);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.crossReferences)) {
        this.crossReferences = data().deepCopy(fields()[27].schema(), other.crossReferences);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.largerWorks)) {
        this.largerWorks = data().deepCopy(fields()[28].schema(), other.largerWorks);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.useLimitation)) {
        this.useLimitation = data().deepCopy(fields()[29].schema(), other.useLimitation);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.legalConstraints)) {
        this.legalConstraints = data().deepCopy(fields()[30].schema(), other.legalConstraints);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.accessFeeStatement)) {
        this.accessFeeStatement = data().deepCopy(fields()[31].schema(), other.accessFeeStatement);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.orderingInstructions)) {
        this.orderingInstructions = data().deepCopy(fields()[32].schema(), other.orderingInstructions);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.edition)) {
        this.edition = data().deepCopy(fields()[33].schema(), other.edition);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.dsmmAccessibility)) {
        this.dsmmAccessibility = data().deepCopy(fields()[34].schema(), other.dsmmAccessibility);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.dsmmDataIntegrity)) {
        this.dsmmDataIntegrity = data().deepCopy(fields()[35].schema(), other.dsmmDataIntegrity);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.dsmmDataQualityAssessment)) {
        this.dsmmDataQualityAssessment = data().deepCopy(fields()[36].schema(), other.dsmmDataQualityAssessment);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.dsmmDataQualityAssurance)) {
        this.dsmmDataQualityAssurance = data().deepCopy(fields()[37].schema(), other.dsmmDataQualityAssurance);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.dsmmDataQualityControlMonitoring)) {
        this.dsmmDataQualityControlMonitoring = data().deepCopy(fields()[38].schema(), other.dsmmDataQualityControlMonitoring);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.dsmmPreservability)) {
        this.dsmmPreservability = data().deepCopy(fields()[39].schema(), other.dsmmPreservability);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.dsmmProductionSustainability)) {
        this.dsmmProductionSustainability = data().deepCopy(fields()[40].schema(), other.dsmmProductionSustainability);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.dsmmTransparencyTraceability)) {
        this.dsmmTransparencyTraceability = data().deepCopy(fields()[41].schema(), other.dsmmTransparencyTraceability);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.dsmmUsability)) {
        this.dsmmUsability = data().deepCopy(fields()[42].schema(), other.dsmmUsability);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.dsmmAverage)) {
        this.dsmmAverage = data().deepCopy(fields()[43].schema(), other.dsmmAverage);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.updateFrequency)) {
        this.updateFrequency = data().deepCopy(fields()[44].schema(), other.updateFrequency);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.presentationForm)) {
        this.presentationForm = data().deepCopy(fields()[45].schema(), other.presentationForm);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.services)) {
        this.services = data().deepCopy(fields()[46].schema(), other.services);
        fieldSetFlags()[46] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Discovery instance
     * @param other The existing instance to copy.
     */
    private Builder(Discovery other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.fileIdentifier)) {
        this.fileIdentifier = data().deepCopy(fields()[0].schema(), other.fileIdentifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.parentIdentifier)) {
        this.parentIdentifier = data().deepCopy(fields()[1].schema(), other.parentIdentifier);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.hierarchyLevelName)) {
        this.hierarchyLevelName = data().deepCopy(fields()[2].schema(), other.hierarchyLevelName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.doi)) {
        this.doi = data().deepCopy(fields()[3].schema(), other.doi);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.purpose)) {
        this.purpose = data().deepCopy(fields()[4].schema(), other.purpose);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.status)) {
        this.status = data().deepCopy(fields()[5].schema(), other.status);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.credit)) {
        this.credit = data().deepCopy(fields()[6].schema(), other.credit);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.title)) {
        this.title = data().deepCopy(fields()[7].schema(), other.title);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.alternateTitle)) {
        this.alternateTitle = data().deepCopy(fields()[8].schema(), other.alternateTitle);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.description)) {
        this.description = data().deepCopy(fields()[9].schema(), other.description);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.keywords)) {
        this.keywords = data().deepCopy(fields()[10].schema(), other.keywords);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.topicCategories)) {
        this.topicCategories = data().deepCopy(fields()[11].schema(), other.topicCategories);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.temporalBounding)) {
        this.temporalBounding = data().deepCopy(fields()[12].schema(), other.temporalBounding);
        fieldSetFlags()[12] = true;
      }
      this.temporalBoundingBuilder = null;
      if (isValidValue(fields()[13], other.spatialBounding)) {
        this.spatialBounding = data().deepCopy(fields()[13].schema(), other.spatialBounding);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.isGlobal)) {
        this.isGlobal = data().deepCopy(fields()[14].schema(), other.isGlobal);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.acquisitionInstruments)) {
        this.acquisitionInstruments = data().deepCopy(fields()[15].schema(), other.acquisitionInstruments);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.acquisitionOperations)) {
        this.acquisitionOperations = data().deepCopy(fields()[16].schema(), other.acquisitionOperations);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.acquisitionPlatforms)) {
        this.acquisitionPlatforms = data().deepCopy(fields()[17].schema(), other.acquisitionPlatforms);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.dataFormats)) {
        this.dataFormats = data().deepCopy(fields()[18].schema(), other.dataFormats);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.links)) {
        this.links = data().deepCopy(fields()[19].schema(), other.links);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.responsibleParties)) {
        this.responsibleParties = data().deepCopy(fields()[20].schema(), other.responsibleParties);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.thumbnail)) {
        this.thumbnail = data().deepCopy(fields()[21].schema(), other.thumbnail);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.thumbnailDescription)) {
        this.thumbnailDescription = data().deepCopy(fields()[22].schema(), other.thumbnailDescription);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.creationDate)) {
        this.creationDate = data().deepCopy(fields()[23].schema(), other.creationDate);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.revisionDate)) {
        this.revisionDate = data().deepCopy(fields()[24].schema(), other.revisionDate);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.publicationDate)) {
        this.publicationDate = data().deepCopy(fields()[25].schema(), other.publicationDate);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.citeAsStatements)) {
        this.citeAsStatements = data().deepCopy(fields()[26].schema(), other.citeAsStatements);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.crossReferences)) {
        this.crossReferences = data().deepCopy(fields()[27].schema(), other.crossReferences);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.largerWorks)) {
        this.largerWorks = data().deepCopy(fields()[28].schema(), other.largerWorks);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.useLimitation)) {
        this.useLimitation = data().deepCopy(fields()[29].schema(), other.useLimitation);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.legalConstraints)) {
        this.legalConstraints = data().deepCopy(fields()[30].schema(), other.legalConstraints);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.accessFeeStatement)) {
        this.accessFeeStatement = data().deepCopy(fields()[31].schema(), other.accessFeeStatement);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.orderingInstructions)) {
        this.orderingInstructions = data().deepCopy(fields()[32].schema(), other.orderingInstructions);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.edition)) {
        this.edition = data().deepCopy(fields()[33].schema(), other.edition);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.dsmmAccessibility)) {
        this.dsmmAccessibility = data().deepCopy(fields()[34].schema(), other.dsmmAccessibility);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.dsmmDataIntegrity)) {
        this.dsmmDataIntegrity = data().deepCopy(fields()[35].schema(), other.dsmmDataIntegrity);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.dsmmDataQualityAssessment)) {
        this.dsmmDataQualityAssessment = data().deepCopy(fields()[36].schema(), other.dsmmDataQualityAssessment);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.dsmmDataQualityAssurance)) {
        this.dsmmDataQualityAssurance = data().deepCopy(fields()[37].schema(), other.dsmmDataQualityAssurance);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.dsmmDataQualityControlMonitoring)) {
        this.dsmmDataQualityControlMonitoring = data().deepCopy(fields()[38].schema(), other.dsmmDataQualityControlMonitoring);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.dsmmPreservability)) {
        this.dsmmPreservability = data().deepCopy(fields()[39].schema(), other.dsmmPreservability);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.dsmmProductionSustainability)) {
        this.dsmmProductionSustainability = data().deepCopy(fields()[40].schema(), other.dsmmProductionSustainability);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.dsmmTransparencyTraceability)) {
        this.dsmmTransparencyTraceability = data().deepCopy(fields()[41].schema(), other.dsmmTransparencyTraceability);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.dsmmUsability)) {
        this.dsmmUsability = data().deepCopy(fields()[42].schema(), other.dsmmUsability);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.dsmmAverage)) {
        this.dsmmAverage = data().deepCopy(fields()[43].schema(), other.dsmmAverage);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.updateFrequency)) {
        this.updateFrequency = data().deepCopy(fields()[44].schema(), other.updateFrequency);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.presentationForm)) {
        this.presentationForm = data().deepCopy(fields()[45].schema(), other.presentationForm);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.services)) {
        this.services = data().deepCopy(fields()[46].schema(), other.services);
        fieldSetFlags()[46] = true;
      }
    }

    /**
      * Gets the value of the 'fileIdentifier' field.
      * @return The value.
      */
    public String getFileIdentifier() {
      return fileIdentifier;
    }

    /**
      * Sets the value of the 'fileIdentifier' field.
      * @param value The value of 'fileIdentifier'.
      * @return This builder.
      */
    public Discovery.Builder setFileIdentifier(String value) {
      validate(fields()[0], value);
      this.fileIdentifier = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'fileIdentifier' field has been set.
      * @return True if the 'fileIdentifier' field has been set, false otherwise.
      */
    public boolean hasFileIdentifier() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'fileIdentifier' field.
      * @return This builder.
      */
    public Discovery.Builder clearFileIdentifier() {
      fileIdentifier = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'parentIdentifier' field.
      * @return The value.
      */
    public String getParentIdentifier() {
      return parentIdentifier;
    }

    /**
      * Sets the value of the 'parentIdentifier' field.
      * @param value The value of 'parentIdentifier'.
      * @return This builder.
      */
    public Discovery.Builder setParentIdentifier(String value) {
      validate(fields()[1], value);
      this.parentIdentifier = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'parentIdentifier' field has been set.
      * @return True if the 'parentIdentifier' field has been set, false otherwise.
      */
    public boolean hasParentIdentifier() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'parentIdentifier' field.
      * @return This builder.
      */
    public Discovery.Builder clearParentIdentifier() {
      parentIdentifier = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'hierarchyLevelName' field.
      * @return The value.
      */
    public String getHierarchyLevelName() {
      return hierarchyLevelName;
    }

    /**
      * Sets the value of the 'hierarchyLevelName' field.
      * @param value The value of 'hierarchyLevelName'.
      * @return This builder.
      */
    public Discovery.Builder setHierarchyLevelName(String value) {
      validate(fields()[2], value);
      this.hierarchyLevelName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'hierarchyLevelName' field has been set.
      * @return True if the 'hierarchyLevelName' field has been set, false otherwise.
      */
    public boolean hasHierarchyLevelName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'hierarchyLevelName' field.
      * @return This builder.
      */
    public Discovery.Builder clearHierarchyLevelName() {
      hierarchyLevelName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'doi' field.
      * @return The value.
      */
    public String getDoi() {
      return doi;
    }

    /**
      * Sets the value of the 'doi' field.
      * @param value The value of 'doi'.
      * @return This builder.
      */
    public Discovery.Builder setDoi(String value) {
      validate(fields()[3], value);
      this.doi = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'doi' field has been set.
      * @return True if the 'doi' field has been set, false otherwise.
      */
    public boolean hasDoi() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'doi' field.
      * @return This builder.
      */
    public Discovery.Builder clearDoi() {
      doi = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'purpose' field.
      * @return The value.
      */
    public String getPurpose() {
      return purpose;
    }

    /**
      * Sets the value of the 'purpose' field.
      * @param value The value of 'purpose'.
      * @return This builder.
      */
    public Discovery.Builder setPurpose(String value) {
      validate(fields()[4], value);
      this.purpose = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'purpose' field has been set.
      * @return True if the 'purpose' field has been set, false otherwise.
      */
    public boolean hasPurpose() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'purpose' field.
      * @return This builder.
      */
    public Discovery.Builder clearPurpose() {
      purpose = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public String getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public Discovery.Builder setStatus(String value) {
      validate(fields()[5], value);
      this.status = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public Discovery.Builder clearStatus() {
      status = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'credit' field.
      * @return The value.
      */
    public String getCredit() {
      return credit;
    }

    /**
      * Sets the value of the 'credit' field.
      * @param value The value of 'credit'.
      * @return This builder.
      */
    public Discovery.Builder setCredit(String value) {
      validate(fields()[6], value);
      this.credit = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'credit' field has been set.
      * @return True if the 'credit' field has been set, false otherwise.
      */
    public boolean hasCredit() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'credit' field.
      * @return This builder.
      */
    public Discovery.Builder clearCredit() {
      credit = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public String getTitle() {
      return title;
    }

    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public Discovery.Builder setTitle(String value) {
      validate(fields()[7], value);
      this.title = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public Discovery.Builder clearTitle() {
      title = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'alternateTitle' field.
      * @return The value.
      */
    public String getAlternateTitle() {
      return alternateTitle;
    }

    /**
      * Sets the value of the 'alternateTitle' field.
      * @param value The value of 'alternateTitle'.
      * @return This builder.
      */
    public Discovery.Builder setAlternateTitle(String value) {
      validate(fields()[8], value);
      this.alternateTitle = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'alternateTitle' field has been set.
      * @return True if the 'alternateTitle' field has been set, false otherwise.
      */
    public boolean hasAlternateTitle() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'alternateTitle' field.
      * @return This builder.
      */
    public Discovery.Builder clearAlternateTitle() {
      alternateTitle = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'description' field.
      * @return The value.
      */
    public String getDescription() {
      return description;
    }

    /**
      * Sets the value of the 'description' field.
      * @param value The value of 'description'.
      * @return This builder.
      */
    public Discovery.Builder setDescription(String value) {
      validate(fields()[9], value);
      this.description = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'description' field has been set.
      * @return True if the 'description' field has been set, false otherwise.
      */
    public boolean hasDescription() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'description' field.
      * @return This builder.
      */
    public Discovery.Builder clearDescription() {
      description = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'keywords' field.
      * @return The value.
      */
    public java.util.List<KeywordsElement> getKeywords() {
      return keywords;
    }

    /**
      * Sets the value of the 'keywords' field.
      * @param value The value of 'keywords'.
      * @return This builder.
      */
    public Discovery.Builder setKeywords(java.util.List<KeywordsElement> value) {
      validate(fields()[10], value);
      this.keywords = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'keywords' field has been set.
      * @return True if the 'keywords' field has been set, false otherwise.
      */
    public boolean hasKeywords() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'keywords' field.
      * @return This builder.
      */
    public Discovery.Builder clearKeywords() {
      keywords = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'topicCategories' field.
      * @return The value.
      */
    public java.util.List<String> getTopicCategories() {
      return topicCategories;
    }

    /**
      * Sets the value of the 'topicCategories' field.
      * @param value The value of 'topicCategories'.
      * @return This builder.
      */
    public Discovery.Builder setTopicCategories(java.util.List<String> value) {
      validate(fields()[11], value);
      this.topicCategories = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'topicCategories' field has been set.
      * @return True if the 'topicCategories' field has been set, false otherwise.
      */
    public boolean hasTopicCategories() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'topicCategories' field.
      * @return This builder.
      */
    public Discovery.Builder clearTopicCategories() {
      topicCategories = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'temporalBounding' field.
      * @return The value.
      */
    public TemporalBounding getTemporalBounding() {
      return temporalBounding;
    }

    /**
      * Sets the value of the 'temporalBounding' field.
      * @param value The value of 'temporalBounding'.
      * @return This builder.
      */
    public Discovery.Builder setTemporalBounding(TemporalBounding value) {
      validate(fields()[12], value);
      this.temporalBoundingBuilder = null;
      this.temporalBounding = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'temporalBounding' field has been set.
      * @return True if the 'temporalBounding' field has been set, false otherwise.
      */
    public boolean hasTemporalBounding() {
      return fieldSetFlags()[12];
    }

    /**
     * Gets the Builder instance for the 'temporalBounding' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public TemporalBounding.Builder getTemporalBoundingBuilder() {
      if (temporalBoundingBuilder == null) {
        if (hasTemporalBounding()) {
          setTemporalBoundingBuilder(TemporalBounding.newBuilder(temporalBounding));
        } else {
          setTemporalBoundingBuilder(TemporalBounding.newBuilder());
        }
      }
      return temporalBoundingBuilder;
    }

    /**
     * Sets the Builder instance for the 'temporalBounding' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Discovery.Builder setTemporalBoundingBuilder(TemporalBounding.Builder value) {
      clearTemporalBounding();
      temporalBoundingBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'temporalBounding' field has an active Builder instance
     * @return True if the 'temporalBounding' field has an active Builder instance
     */
    public boolean hasTemporalBoundingBuilder() {
      return temporalBoundingBuilder != null;
    }

    /**
      * Clears the value of the 'temporalBounding' field.
      * @return This builder.
      */
    public Discovery.Builder clearTemporalBounding() {
      temporalBounding = null;
      temporalBoundingBuilder = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'spatialBounding' field.
      * @return The value.
      */
    public Object getSpatialBounding() {
      return spatialBounding;
    }

    /**
      * Sets the value of the 'spatialBounding' field.
      * @param value The value of 'spatialBounding'.
      * @return This builder.
      */
    public Discovery.Builder setSpatialBounding(Object value) {
      validate(fields()[13], value);
      this.spatialBounding = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'spatialBounding' field has been set.
      * @return True if the 'spatialBounding' field has been set, false otherwise.
      */
    public boolean hasSpatialBounding() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'spatialBounding' field.
      * @return This builder.
      */
    public Discovery.Builder clearSpatialBounding() {
      spatialBounding = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'isGlobal' field.
      * @return The value.
      */
    public Boolean getIsGlobal() {
      return isGlobal;
    }

    /**
      * Sets the value of the 'isGlobal' field.
      * @param value The value of 'isGlobal'.
      * @return This builder.
      */
    public Discovery.Builder setIsGlobal(Boolean value) {
      validate(fields()[14], value);
      this.isGlobal = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'isGlobal' field has been set.
      * @return True if the 'isGlobal' field has been set, false otherwise.
      */
    public boolean hasIsGlobal() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'isGlobal' field.
      * @return This builder.
      */
    public Discovery.Builder clearIsGlobal() {
      isGlobal = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'acquisitionInstruments' field.
      * @return The value.
      */
    public java.util.List<Instruments> getAcquisitionInstruments() {
      return acquisitionInstruments;
    }

    /**
      * Sets the value of the 'acquisitionInstruments' field.
      * @param value The value of 'acquisitionInstruments'.
      * @return This builder.
      */
    public Discovery.Builder setAcquisitionInstruments(java.util.List<Instruments> value) {
      validate(fields()[15], value);
      this.acquisitionInstruments = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'acquisitionInstruments' field has been set.
      * @return True if the 'acquisitionInstruments' field has been set, false otherwise.
      */
    public boolean hasAcquisitionInstruments() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'acquisitionInstruments' field.
      * @return This builder.
      */
    public Discovery.Builder clearAcquisitionInstruments() {
      acquisitionInstruments = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'acquisitionOperations' field.
      * @return The value.
      */
    public java.util.List<Operation> getAcquisitionOperations() {
      return acquisitionOperations;
    }

    /**
      * Sets the value of the 'acquisitionOperations' field.
      * @param value The value of 'acquisitionOperations'.
      * @return This builder.
      */
    public Discovery.Builder setAcquisitionOperations(java.util.List<Operation> value) {
      validate(fields()[16], value);
      this.acquisitionOperations = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'acquisitionOperations' field has been set.
      * @return True if the 'acquisitionOperations' field has been set, false otherwise.
      */
    public boolean hasAcquisitionOperations() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'acquisitionOperations' field.
      * @return This builder.
      */
    public Discovery.Builder clearAcquisitionOperations() {
      acquisitionOperations = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'acquisitionPlatforms' field.
      * @return The value.
      */
    public java.util.List<Platform> getAcquisitionPlatforms() {
      return acquisitionPlatforms;
    }

    /**
      * Sets the value of the 'acquisitionPlatforms' field.
      * @param value The value of 'acquisitionPlatforms'.
      * @return This builder.
      */
    public Discovery.Builder setAcquisitionPlatforms(java.util.List<Platform> value) {
      validate(fields()[17], value);
      this.acquisitionPlatforms = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'acquisitionPlatforms' field has been set.
      * @return True if the 'acquisitionPlatforms' field has been set, false otherwise.
      */
    public boolean hasAcquisitionPlatforms() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'acquisitionPlatforms' field.
      * @return This builder.
      */
    public Discovery.Builder clearAcquisitionPlatforms() {
      acquisitionPlatforms = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'dataFormats' field.
      * @return The value.
      */
    public java.util.List<DataFormat> getDataFormats() {
      return dataFormats;
    }

    /**
      * Sets the value of the 'dataFormats' field.
      * @param value The value of 'dataFormats'.
      * @return This builder.
      */
    public Discovery.Builder setDataFormats(java.util.List<DataFormat> value) {
      validate(fields()[18], value);
      this.dataFormats = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'dataFormats' field has been set.
      * @return True if the 'dataFormats' field has been set, false otherwise.
      */
    public boolean hasDataFormats() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'dataFormats' field.
      * @return This builder.
      */
    public Discovery.Builder clearDataFormats() {
      dataFormats = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'links' field.
      * @return The value.
      */
    public java.util.List<Link> getLinks() {
      return links;
    }

    /**
      * Sets the value of the 'links' field.
      * @param value The value of 'links'.
      * @return This builder.
      */
    public Discovery.Builder setLinks(java.util.List<Link> value) {
      validate(fields()[19], value);
      this.links = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'links' field has been set.
      * @return True if the 'links' field has been set, false otherwise.
      */
    public boolean hasLinks() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'links' field.
      * @return This builder.
      */
    public Discovery.Builder clearLinks() {
      links = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'responsibleParties' field.
      * @return The value.
      */
    public java.util.List<ResponsibleParty> getResponsibleParties() {
      return responsibleParties;
    }

    /**
      * Sets the value of the 'responsibleParties' field.
      * @param value The value of 'responsibleParties'.
      * @return This builder.
      */
    public Discovery.Builder setResponsibleParties(java.util.List<ResponsibleParty> value) {
      validate(fields()[20], value);
      this.responsibleParties = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'responsibleParties' field has been set.
      * @return True if the 'responsibleParties' field has been set, false otherwise.
      */
    public boolean hasResponsibleParties() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'responsibleParties' field.
      * @return This builder.
      */
    public Discovery.Builder clearResponsibleParties() {
      responsibleParties = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'thumbnail' field.
      * @return The value.
      */
    public String getThumbnail() {
      return thumbnail;
    }

    /**
      * Sets the value of the 'thumbnail' field.
      * @param value The value of 'thumbnail'.
      * @return This builder.
      */
    public Discovery.Builder setThumbnail(String value) {
      validate(fields()[21], value);
      this.thumbnail = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'thumbnail' field has been set.
      * @return True if the 'thumbnail' field has been set, false otherwise.
      */
    public boolean hasThumbnail() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'thumbnail' field.
      * @return This builder.
      */
    public Discovery.Builder clearThumbnail() {
      thumbnail = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'thumbnailDescription' field.
      * @return The value.
      */
    public String getThumbnailDescription() {
      return thumbnailDescription;
    }

    /**
      * Sets the value of the 'thumbnailDescription' field.
      * @param value The value of 'thumbnailDescription'.
      * @return This builder.
      */
    public Discovery.Builder setThumbnailDescription(String value) {
      validate(fields()[22], value);
      this.thumbnailDescription = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'thumbnailDescription' field has been set.
      * @return True if the 'thumbnailDescription' field has been set, false otherwise.
      */
    public boolean hasThumbnailDescription() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'thumbnailDescription' field.
      * @return This builder.
      */
    public Discovery.Builder clearThumbnailDescription() {
      thumbnailDescription = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'creationDate' field.
      * @return The value.
      */
    public String getCreationDate() {
      return creationDate;
    }

    /**
      * Sets the value of the 'creationDate' field.
      * @param value The value of 'creationDate'.
      * @return This builder.
      */
    public Discovery.Builder setCreationDate(String value) {
      validate(fields()[23], value);
      this.creationDate = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'creationDate' field has been set.
      * @return True if the 'creationDate' field has been set, false otherwise.
      */
    public boolean hasCreationDate() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'creationDate' field.
      * @return This builder.
      */
    public Discovery.Builder clearCreationDate() {
      creationDate = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'revisionDate' field.
      * @return The value.
      */
    public String getRevisionDate() {
      return revisionDate;
    }

    /**
      * Sets the value of the 'revisionDate' field.
      * @param value The value of 'revisionDate'.
      * @return This builder.
      */
    public Discovery.Builder setRevisionDate(String value) {
      validate(fields()[24], value);
      this.revisionDate = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'revisionDate' field has been set.
      * @return True if the 'revisionDate' field has been set, false otherwise.
      */
    public boolean hasRevisionDate() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'revisionDate' field.
      * @return This builder.
      */
    public Discovery.Builder clearRevisionDate() {
      revisionDate = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'publicationDate' field.
      * @return The value.
      */
    public String getPublicationDate() {
      return publicationDate;
    }

    /**
      * Sets the value of the 'publicationDate' field.
      * @param value The value of 'publicationDate'.
      * @return This builder.
      */
    public Discovery.Builder setPublicationDate(String value) {
      validate(fields()[25], value);
      this.publicationDate = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'publicationDate' field has been set.
      * @return True if the 'publicationDate' field has been set, false otherwise.
      */
    public boolean hasPublicationDate() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'publicationDate' field.
      * @return This builder.
      */
    public Discovery.Builder clearPublicationDate() {
      publicationDate = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'citeAsStatements' field.
      * @return The value.
      */
    public java.util.List<String> getCiteAsStatements() {
      return citeAsStatements;
    }

    /**
      * Sets the value of the 'citeAsStatements' field.
      * @param value The value of 'citeAsStatements'.
      * @return This builder.
      */
    public Discovery.Builder setCiteAsStatements(java.util.List<String> value) {
      validate(fields()[26], value);
      this.citeAsStatements = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'citeAsStatements' field has been set.
      * @return True if the 'citeAsStatements' field has been set, false otherwise.
      */
    public boolean hasCiteAsStatements() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'citeAsStatements' field.
      * @return This builder.
      */
    public Discovery.Builder clearCiteAsStatements() {
      citeAsStatements = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'crossReferences' field.
      * @return The value.
      */
    public java.util.List<Reference> getCrossReferences() {
      return crossReferences;
    }

    /**
      * Sets the value of the 'crossReferences' field.
      * @param value The value of 'crossReferences'.
      * @return This builder.
      */
    public Discovery.Builder setCrossReferences(java.util.List<Reference> value) {
      validate(fields()[27], value);
      this.crossReferences = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'crossReferences' field has been set.
      * @return True if the 'crossReferences' field has been set, false otherwise.
      */
    public boolean hasCrossReferences() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'crossReferences' field.
      * @return This builder.
      */
    public Discovery.Builder clearCrossReferences() {
      crossReferences = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'largerWorks' field.
      * @return The value.
      */
    public java.util.List<Reference> getLargerWorks() {
      return largerWorks;
    }

    /**
      * Sets the value of the 'largerWorks' field.
      * @param value The value of 'largerWorks'.
      * @return This builder.
      */
    public Discovery.Builder setLargerWorks(java.util.List<Reference> value) {
      validate(fields()[28], value);
      this.largerWorks = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'largerWorks' field has been set.
      * @return True if the 'largerWorks' field has been set, false otherwise.
      */
    public boolean hasLargerWorks() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'largerWorks' field.
      * @return This builder.
      */
    public Discovery.Builder clearLargerWorks() {
      largerWorks = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'useLimitation' field.
      * @return The value.
      */
    public String getUseLimitation() {
      return useLimitation;
    }

    /**
      * Sets the value of the 'useLimitation' field.
      * @param value The value of 'useLimitation'.
      * @return This builder.
      */
    public Discovery.Builder setUseLimitation(String value) {
      validate(fields()[29], value);
      this.useLimitation = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'useLimitation' field has been set.
      * @return True if the 'useLimitation' field has been set, false otherwise.
      */
    public boolean hasUseLimitation() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'useLimitation' field.
      * @return This builder.
      */
    public Discovery.Builder clearUseLimitation() {
      useLimitation = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'legalConstraints' field.
      * @return The value.
      */
    public java.util.List<String> getLegalConstraints() {
      return legalConstraints;
    }

    /**
      * Sets the value of the 'legalConstraints' field.
      * @param value The value of 'legalConstraints'.
      * @return This builder.
      */
    public Discovery.Builder setLegalConstraints(java.util.List<String> value) {
      validate(fields()[30], value);
      this.legalConstraints = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'legalConstraints' field has been set.
      * @return True if the 'legalConstraints' field has been set, false otherwise.
      */
    public boolean hasLegalConstraints() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'legalConstraints' field.
      * @return This builder.
      */
    public Discovery.Builder clearLegalConstraints() {
      legalConstraints = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'accessFeeStatement' field.
      * @return The value.
      */
    public String getAccessFeeStatement() {
      return accessFeeStatement;
    }

    /**
      * Sets the value of the 'accessFeeStatement' field.
      * @param value The value of 'accessFeeStatement'.
      * @return This builder.
      */
    public Discovery.Builder setAccessFeeStatement(String value) {
      validate(fields()[31], value);
      this.accessFeeStatement = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'accessFeeStatement' field has been set.
      * @return True if the 'accessFeeStatement' field has been set, false otherwise.
      */
    public boolean hasAccessFeeStatement() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'accessFeeStatement' field.
      * @return This builder.
      */
    public Discovery.Builder clearAccessFeeStatement() {
      accessFeeStatement = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderingInstructions' field.
      * @return The value.
      */
    public String getOrderingInstructions() {
      return orderingInstructions;
    }

    /**
      * Sets the value of the 'orderingInstructions' field.
      * @param value The value of 'orderingInstructions'.
      * @return This builder.
      */
    public Discovery.Builder setOrderingInstructions(String value) {
      validate(fields()[32], value);
      this.orderingInstructions = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'orderingInstructions' field has been set.
      * @return True if the 'orderingInstructions' field has been set, false otherwise.
      */
    public boolean hasOrderingInstructions() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'orderingInstructions' field.
      * @return This builder.
      */
    public Discovery.Builder clearOrderingInstructions() {
      orderingInstructions = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'edition' field.
      * @return The value.
      */
    public String getEdition() {
      return edition;
    }

    /**
      * Sets the value of the 'edition' field.
      * @param value The value of 'edition'.
      * @return This builder.
      */
    public Discovery.Builder setEdition(String value) {
      validate(fields()[33], value);
      this.edition = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'edition' field has been set.
      * @return True if the 'edition' field has been set, false otherwise.
      */
    public boolean hasEdition() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'edition' field.
      * @return This builder.
      */
    public Discovery.Builder clearEdition() {
      edition = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'dsmmAccessibility' field.
      * @return The value.
      */
    public Integer getDsmmAccessibility() {
      return dsmmAccessibility;
    }

    /**
      * Sets the value of the 'dsmmAccessibility' field.
      * @param value The value of 'dsmmAccessibility'.
      * @return This builder.
      */
    public Discovery.Builder setDsmmAccessibility(int value) {
      validate(fields()[34], value);
      this.dsmmAccessibility = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'dsmmAccessibility' field has been set.
      * @return True if the 'dsmmAccessibility' field has been set, false otherwise.
      */
    public boolean hasDsmmAccessibility() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'dsmmAccessibility' field.
      * @return This builder.
      */
    public Discovery.Builder clearDsmmAccessibility() {
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'dsmmDataIntegrity' field.
      * @return The value.
      */
    public Integer getDsmmDataIntegrity() {
      return dsmmDataIntegrity;
    }

    /**
      * Sets the value of the 'dsmmDataIntegrity' field.
      * @param value The value of 'dsmmDataIntegrity'.
      * @return This builder.
      */
    public Discovery.Builder setDsmmDataIntegrity(int value) {
      validate(fields()[35], value);
      this.dsmmDataIntegrity = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'dsmmDataIntegrity' field has been set.
      * @return True if the 'dsmmDataIntegrity' field has been set, false otherwise.
      */
    public boolean hasDsmmDataIntegrity() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'dsmmDataIntegrity' field.
      * @return This builder.
      */
    public Discovery.Builder clearDsmmDataIntegrity() {
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'dsmmDataQualityAssessment' field.
      * @return The value.
      */
    public Integer getDsmmDataQualityAssessment() {
      return dsmmDataQualityAssessment;
    }

    /**
      * Sets the value of the 'dsmmDataQualityAssessment' field.
      * @param value The value of 'dsmmDataQualityAssessment'.
      * @return This builder.
      */
    public Discovery.Builder setDsmmDataQualityAssessment(int value) {
      validate(fields()[36], value);
      this.dsmmDataQualityAssessment = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'dsmmDataQualityAssessment' field has been set.
      * @return True if the 'dsmmDataQualityAssessment' field has been set, false otherwise.
      */
    public boolean hasDsmmDataQualityAssessment() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'dsmmDataQualityAssessment' field.
      * @return This builder.
      */
    public Discovery.Builder clearDsmmDataQualityAssessment() {
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'dsmmDataQualityAssurance' field.
      * @return The value.
      */
    public Integer getDsmmDataQualityAssurance() {
      return dsmmDataQualityAssurance;
    }

    /**
      * Sets the value of the 'dsmmDataQualityAssurance' field.
      * @param value The value of 'dsmmDataQualityAssurance'.
      * @return This builder.
      */
    public Discovery.Builder setDsmmDataQualityAssurance(int value) {
      validate(fields()[37], value);
      this.dsmmDataQualityAssurance = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'dsmmDataQualityAssurance' field has been set.
      * @return True if the 'dsmmDataQualityAssurance' field has been set, false otherwise.
      */
    public boolean hasDsmmDataQualityAssurance() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'dsmmDataQualityAssurance' field.
      * @return This builder.
      */
    public Discovery.Builder clearDsmmDataQualityAssurance() {
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'dsmmDataQualityControlMonitoring' field.
      * @return The value.
      */
    public Integer getDsmmDataQualityControlMonitoring() {
      return dsmmDataQualityControlMonitoring;
    }

    /**
      * Sets the value of the 'dsmmDataQualityControlMonitoring' field.
      * @param value The value of 'dsmmDataQualityControlMonitoring'.
      * @return This builder.
      */
    public Discovery.Builder setDsmmDataQualityControlMonitoring(int value) {
      validate(fields()[38], value);
      this.dsmmDataQualityControlMonitoring = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'dsmmDataQualityControlMonitoring' field has been set.
      * @return True if the 'dsmmDataQualityControlMonitoring' field has been set, false otherwise.
      */
    public boolean hasDsmmDataQualityControlMonitoring() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'dsmmDataQualityControlMonitoring' field.
      * @return This builder.
      */
    public Discovery.Builder clearDsmmDataQualityControlMonitoring() {
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'dsmmPreservability' field.
      * @return The value.
      */
    public Integer getDsmmPreservability() {
      return dsmmPreservability;
    }

    /**
      * Sets the value of the 'dsmmPreservability' field.
      * @param value The value of 'dsmmPreservability'.
      * @return This builder.
      */
    public Discovery.Builder setDsmmPreservability(int value) {
      validate(fields()[39], value);
      this.dsmmPreservability = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'dsmmPreservability' field has been set.
      * @return True if the 'dsmmPreservability' field has been set, false otherwise.
      */
    public boolean hasDsmmPreservability() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'dsmmPreservability' field.
      * @return This builder.
      */
    public Discovery.Builder clearDsmmPreservability() {
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'dsmmProductionSustainability' field.
      * @return The value.
      */
    public Integer getDsmmProductionSustainability() {
      return dsmmProductionSustainability;
    }

    /**
      * Sets the value of the 'dsmmProductionSustainability' field.
      * @param value The value of 'dsmmProductionSustainability'.
      * @return This builder.
      */
    public Discovery.Builder setDsmmProductionSustainability(int value) {
      validate(fields()[40], value);
      this.dsmmProductionSustainability = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'dsmmProductionSustainability' field has been set.
      * @return True if the 'dsmmProductionSustainability' field has been set, false otherwise.
      */
    public boolean hasDsmmProductionSustainability() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'dsmmProductionSustainability' field.
      * @return This builder.
      */
    public Discovery.Builder clearDsmmProductionSustainability() {
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'dsmmTransparencyTraceability' field.
      * @return The value.
      */
    public Integer getDsmmTransparencyTraceability() {
      return dsmmTransparencyTraceability;
    }

    /**
      * Sets the value of the 'dsmmTransparencyTraceability' field.
      * @param value The value of 'dsmmTransparencyTraceability'.
      * @return This builder.
      */
    public Discovery.Builder setDsmmTransparencyTraceability(int value) {
      validate(fields()[41], value);
      this.dsmmTransparencyTraceability = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'dsmmTransparencyTraceability' field has been set.
      * @return True if the 'dsmmTransparencyTraceability' field has been set, false otherwise.
      */
    public boolean hasDsmmTransparencyTraceability() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'dsmmTransparencyTraceability' field.
      * @return This builder.
      */
    public Discovery.Builder clearDsmmTransparencyTraceability() {
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'dsmmUsability' field.
      * @return The value.
      */
    public Integer getDsmmUsability() {
      return dsmmUsability;
    }

    /**
      * Sets the value of the 'dsmmUsability' field.
      * @param value The value of 'dsmmUsability'.
      * @return This builder.
      */
    public Discovery.Builder setDsmmUsability(int value) {
      validate(fields()[42], value);
      this.dsmmUsability = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'dsmmUsability' field has been set.
      * @return True if the 'dsmmUsability' field has been set, false otherwise.
      */
    public boolean hasDsmmUsability() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'dsmmUsability' field.
      * @return This builder.
      */
    public Discovery.Builder clearDsmmUsability() {
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'dsmmAverage' field.
      * Calculated mean average of individual DSMM scores for Accessibility, Data Integrity, Data Quality Assessment, Data Quality Assurance, Data Quality Control Monitoring, Preservability, Production Sustainability, Transparency Traceability, and Usability.
      * @return The value.
      */
    public Float getDsmmAverage() {
      return dsmmAverage;
    }

    /**
      * Sets the value of the 'dsmmAverage' field.
      * Calculated mean average of individual DSMM scores for Accessibility, Data Integrity, Data Quality Assessment, Data Quality Assurance, Data Quality Control Monitoring, Preservability, Production Sustainability, Transparency Traceability, and Usability.
      * @param value The value of 'dsmmAverage'.
      * @return This builder.
      */
    public Discovery.Builder setDsmmAverage(float value) {
      validate(fields()[43], value);
      this.dsmmAverage = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'dsmmAverage' field has been set.
      * Calculated mean average of individual DSMM scores for Accessibility, Data Integrity, Data Quality Assessment, Data Quality Assurance, Data Quality Control Monitoring, Preservability, Production Sustainability, Transparency Traceability, and Usability.
      * @return True if the 'dsmmAverage' field has been set, false otherwise.
      */
    public boolean hasDsmmAverage() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'dsmmAverage' field.
      * Calculated mean average of individual DSMM scores for Accessibility, Data Integrity, Data Quality Assessment, Data Quality Assurance, Data Quality Control Monitoring, Preservability, Production Sustainability, Transparency Traceability, and Usability.
      * @return This builder.
      */
    public Discovery.Builder clearDsmmAverage() {
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'updateFrequency' field.
      * @return The value.
      */
    public String getUpdateFrequency() {
      return updateFrequency;
    }

    /**
      * Sets the value of the 'updateFrequency' field.
      * @param value The value of 'updateFrequency'.
      * @return This builder.
      */
    public Discovery.Builder setUpdateFrequency(String value) {
      validate(fields()[44], value);
      this.updateFrequency = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'updateFrequency' field has been set.
      * @return True if the 'updateFrequency' field has been set, false otherwise.
      */
    public boolean hasUpdateFrequency() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'updateFrequency' field.
      * @return This builder.
      */
    public Discovery.Builder clearUpdateFrequency() {
      updateFrequency = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'presentationForm' field.
      * @return The value.
      */
    public String getPresentationForm() {
      return presentationForm;
    }

    /**
      * Sets the value of the 'presentationForm' field.
      * @param value The value of 'presentationForm'.
      * @return This builder.
      */
    public Discovery.Builder setPresentationForm(String value) {
      validate(fields()[45], value);
      this.presentationForm = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'presentationForm' field has been set.
      * @return True if the 'presentationForm' field has been set, false otherwise.
      */
    public boolean hasPresentationForm() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'presentationForm' field.
      * @return This builder.
      */
    public Discovery.Builder clearPresentationForm() {
      presentationForm = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'services' field.
      * List of objects that represent an SV_ServiceIdentification section, if any, of ISO 19115 XML metadata document. Empty if not present.
      * @return The value.
      */
    public java.util.List<Service> getServices() {
      return services;
    }

    /**
      * Sets the value of the 'services' field.
      * List of objects that represent an SV_ServiceIdentification section, if any, of ISO 19115 XML metadata document. Empty if not present.
      * @param value The value of 'services'.
      * @return This builder.
      */
    public Discovery.Builder setServices(java.util.List<Service> value) {
      validate(fields()[46], value);
      this.services = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'services' field has been set.
      * List of objects that represent an SV_ServiceIdentification section, if any, of ISO 19115 XML metadata document. Empty if not present.
      * @return True if the 'services' field has been set, false otherwise.
      */
    public boolean hasServices() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'services' field.
      * List of objects that represent an SV_ServiceIdentification section, if any, of ISO 19115 XML metadata document. Empty if not present.
      * @return This builder.
      */
    public Discovery.Builder clearServices() {
      services = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    @Override
    public Discovery build() {
      try {
        Discovery record = new Discovery();
        record.fileIdentifier = fieldSetFlags()[0] ? this.fileIdentifier : (String) defaultValue(fields()[0]);
        record.parentIdentifier = fieldSetFlags()[1] ? this.parentIdentifier : (String) defaultValue(fields()[1]);
        record.hierarchyLevelName = fieldSetFlags()[2] ? this.hierarchyLevelName : (String) defaultValue(fields()[2]);
        record.doi = fieldSetFlags()[3] ? this.doi : (String) defaultValue(fields()[3]);
        record.purpose = fieldSetFlags()[4] ? this.purpose : (String) defaultValue(fields()[4]);
        record.status = fieldSetFlags()[5] ? this.status : (String) defaultValue(fields()[5]);
        record.credit = fieldSetFlags()[6] ? this.credit : (String) defaultValue(fields()[6]);
        record.title = fieldSetFlags()[7] ? this.title : (String) defaultValue(fields()[7]);
        record.alternateTitle = fieldSetFlags()[8] ? this.alternateTitle : (String) defaultValue(fields()[8]);
        record.description = fieldSetFlags()[9] ? this.description : (String) defaultValue(fields()[9]);
        record.keywords = fieldSetFlags()[10] ? this.keywords : (java.util.List<KeywordsElement>) defaultValue(fields()[10]);
        record.topicCategories = fieldSetFlags()[11] ? this.topicCategories : (java.util.List<String>) defaultValue(fields()[11]);
        if (temporalBoundingBuilder != null) {
          record.temporalBounding = this.temporalBoundingBuilder.build();
        } else {
          record.temporalBounding = fieldSetFlags()[12] ? this.temporalBounding : (TemporalBounding) defaultValue(fields()[12]);
        }
        record.spatialBounding = fieldSetFlags()[13] ? this.spatialBounding : (Object) defaultValue(fields()[13]);
        record.isGlobal = fieldSetFlags()[14] ? this.isGlobal : (Boolean) defaultValue(fields()[14]);
        record.acquisitionInstruments = fieldSetFlags()[15] ? this.acquisitionInstruments : (java.util.List<Instruments>) defaultValue(fields()[15]);
        record.acquisitionOperations = fieldSetFlags()[16] ? this.acquisitionOperations : (java.util.List<Operation>) defaultValue(fields()[16]);
        record.acquisitionPlatforms = fieldSetFlags()[17] ? this.acquisitionPlatforms : (java.util.List<Platform>) defaultValue(fields()[17]);
        record.dataFormats = fieldSetFlags()[18] ? this.dataFormats : (java.util.List<DataFormat>) defaultValue(fields()[18]);
        record.links = fieldSetFlags()[19] ? this.links : (java.util.List<Link>) defaultValue(fields()[19]);
        record.responsibleParties = fieldSetFlags()[20] ? this.responsibleParties : (java.util.List<ResponsibleParty>) defaultValue(fields()[20]);
        record.thumbnail = fieldSetFlags()[21] ? this.thumbnail : (String) defaultValue(fields()[21]);
        record.thumbnailDescription = fieldSetFlags()[22] ? this.thumbnailDescription : (String) defaultValue(fields()[22]);
        record.creationDate = fieldSetFlags()[23] ? this.creationDate : (String) defaultValue(fields()[23]);
        record.revisionDate = fieldSetFlags()[24] ? this.revisionDate : (String) defaultValue(fields()[24]);
        record.publicationDate = fieldSetFlags()[25] ? this.publicationDate : (String) defaultValue(fields()[25]);
        record.citeAsStatements = fieldSetFlags()[26] ? this.citeAsStatements : (java.util.List<String>) defaultValue(fields()[26]);
        record.crossReferences = fieldSetFlags()[27] ? this.crossReferences : (java.util.List<Reference>) defaultValue(fields()[27]);
        record.largerWorks = fieldSetFlags()[28] ? this.largerWorks : (java.util.List<Reference>) defaultValue(fields()[28]);
        record.useLimitation = fieldSetFlags()[29] ? this.useLimitation : (String) defaultValue(fields()[29]);
        record.legalConstraints = fieldSetFlags()[30] ? this.legalConstraints : (java.util.List<String>) defaultValue(fields()[30]);
        record.accessFeeStatement = fieldSetFlags()[31] ? this.accessFeeStatement : (String) defaultValue(fields()[31]);
        record.orderingInstructions = fieldSetFlags()[32] ? this.orderingInstructions : (String) defaultValue(fields()[32]);
        record.edition = fieldSetFlags()[33] ? this.edition : (String) defaultValue(fields()[33]);
        record.dsmmAccessibility = fieldSetFlags()[34] ? this.dsmmAccessibility : (Integer) defaultValue(fields()[34]);
        record.dsmmDataIntegrity = fieldSetFlags()[35] ? this.dsmmDataIntegrity : (Integer) defaultValue(fields()[35]);
        record.dsmmDataQualityAssessment = fieldSetFlags()[36] ? this.dsmmDataQualityAssessment : (Integer) defaultValue(fields()[36]);
        record.dsmmDataQualityAssurance = fieldSetFlags()[37] ? this.dsmmDataQualityAssurance : (Integer) defaultValue(fields()[37]);
        record.dsmmDataQualityControlMonitoring = fieldSetFlags()[38] ? this.dsmmDataQualityControlMonitoring : (Integer) defaultValue(fields()[38]);
        record.dsmmPreservability = fieldSetFlags()[39] ? this.dsmmPreservability : (Integer) defaultValue(fields()[39]);
        record.dsmmProductionSustainability = fieldSetFlags()[40] ? this.dsmmProductionSustainability : (Integer) defaultValue(fields()[40]);
        record.dsmmTransparencyTraceability = fieldSetFlags()[41] ? this.dsmmTransparencyTraceability : (Integer) defaultValue(fields()[41]);
        record.dsmmUsability = fieldSetFlags()[42] ? this.dsmmUsability : (Integer) defaultValue(fields()[42]);
        record.dsmmAverage = fieldSetFlags()[43] ? this.dsmmAverage : (Float) defaultValue(fields()[43]);
        record.updateFrequency = fieldSetFlags()[44] ? this.updateFrequency : (String) defaultValue(fields()[44]);
        record.presentationForm = fieldSetFlags()[45] ? this.presentationForm : (String) defaultValue(fields()[45]);
        record.services = fieldSetFlags()[46] ? this.services : (java.util.List<Service>) defaultValue(fields()[46]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
