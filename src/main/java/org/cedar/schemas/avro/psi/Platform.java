/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.cedar.schemas.avro.psi;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Platform extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1718287022606644758L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Platform\",\"namespace\":\"org.cedar.psi.common.avro\",\"fields\":[{\"name\":\"platformIdentifier\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"platformDescription\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"platformSponsor\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},\"default\":[]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private String platformIdentifier;
   private String platformDescription;
   private java.util.List<String> platformSponsor;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Platform() {}

  /**
   * All-args constructor.
   * @param platformIdentifier The new value for platformIdentifier
   * @param platformDescription The new value for platformDescription
   * @param platformSponsor The new value for platformSponsor
   */
  public Platform(String platformIdentifier, String platformDescription, java.util.List<String> platformSponsor) {
    this.platformIdentifier = platformIdentifier;
    this.platformDescription = platformDescription;
    this.platformSponsor = platformSponsor;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return platformIdentifier;
    case 1: return platformDescription;
    case 2: return platformSponsor;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: platformIdentifier = (String)value$; break;
    case 1: platformDescription = (String)value$; break;
    case 2: platformSponsor = (java.util.List<String>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'platformIdentifier' field.
   * @return The value of the 'platformIdentifier' field.
   */
  public String getPlatformIdentifier() {
    return platformIdentifier;
  }


  /**
   * Gets the value of the 'platformDescription' field.
   * @return The value of the 'platformDescription' field.
   */
  public String getPlatformDescription() {
    return platformDescription;
  }


  /**
   * Gets the value of the 'platformSponsor' field.
   * @return The value of the 'platformSponsor' field.
   */
  public java.util.List<String> getPlatformSponsor() {
    return platformSponsor;
  }


  /**
   * Creates a new Platform RecordBuilder.
   * @return A new Platform RecordBuilder
   */
  public static Platform.Builder newBuilder() {
    return new Platform.Builder();
  }

  /**
   * Creates a new Platform RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Platform RecordBuilder
   */
  public static Platform.Builder newBuilder(Platform.Builder other) {
    return new Platform.Builder(other);
  }

  /**
   * Creates a new Platform RecordBuilder by copying an existing Platform instance.
   * @param other The existing instance to copy.
   * @return A new Platform RecordBuilder
   */
  public static Platform.Builder newBuilder(Platform other) {
    return new Platform.Builder(other);
  }

  /**
   * RecordBuilder for Platform instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Platform>
    implements org.apache.avro.data.RecordBuilder<Platform> {

    private String platformIdentifier;
    private String platformDescription;
    private java.util.List<String> platformSponsor;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Platform.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.platformIdentifier)) {
        this.platformIdentifier = data().deepCopy(fields()[0].schema(), other.platformIdentifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.platformDescription)) {
        this.platformDescription = data().deepCopy(fields()[1].schema(), other.platformDescription);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.platformSponsor)) {
        this.platformSponsor = data().deepCopy(fields()[2].schema(), other.platformSponsor);
        fieldSetFlags()[2] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Platform instance
     * @param other The existing instance to copy.
     */
    private Builder(Platform other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.platformIdentifier)) {
        this.platformIdentifier = data().deepCopy(fields()[0].schema(), other.platformIdentifier);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.platformDescription)) {
        this.platformDescription = data().deepCopy(fields()[1].schema(), other.platformDescription);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.platformSponsor)) {
        this.platformSponsor = data().deepCopy(fields()[2].schema(), other.platformSponsor);
        fieldSetFlags()[2] = true;
      }
    }

    /**
      * Gets the value of the 'platformIdentifier' field.
      * @return The value.
      */
    public String getPlatformIdentifier() {
      return platformIdentifier;
    }

    /**
      * Sets the value of the 'platformIdentifier' field.
      * @param value The value of 'platformIdentifier'.
      * @return This builder.
      */
    public Platform.Builder setPlatformIdentifier(String value) {
      validate(fields()[0], value);
      this.platformIdentifier = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'platformIdentifier' field has been set.
      * @return True if the 'platformIdentifier' field has been set, false otherwise.
      */
    public boolean hasPlatformIdentifier() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'platformIdentifier' field.
      * @return This builder.
      */
    public Platform.Builder clearPlatformIdentifier() {
      platformIdentifier = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'platformDescription' field.
      * @return The value.
      */
    public String getPlatformDescription() {
      return platformDescription;
    }

    /**
      * Sets the value of the 'platformDescription' field.
      * @param value The value of 'platformDescription'.
      * @return This builder.
      */
    public Platform.Builder setPlatformDescription(String value) {
      validate(fields()[1], value);
      this.platformDescription = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'platformDescription' field has been set.
      * @return True if the 'platformDescription' field has been set, false otherwise.
      */
    public boolean hasPlatformDescription() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'platformDescription' field.
      * @return This builder.
      */
    public Platform.Builder clearPlatformDescription() {
      platformDescription = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'platformSponsor' field.
      * @return The value.
      */
    public java.util.List<String> getPlatformSponsor() {
      return platformSponsor;
    }

    /**
      * Sets the value of the 'platformSponsor' field.
      * @param value The value of 'platformSponsor'.
      * @return This builder.
      */
    public Platform.Builder setPlatformSponsor(java.util.List<String> value) {
      validate(fields()[2], value);
      this.platformSponsor = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'platformSponsor' field has been set.
      * @return True if the 'platformSponsor' field has been set, false otherwise.
      */
    public boolean hasPlatformSponsor() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'platformSponsor' field.
      * @return This builder.
      */
    public Platform.Builder clearPlatformSponsor() {
      platformSponsor = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public Platform build() {
      try {
        Platform record = new Platform();
        record.platformIdentifier = fieldSetFlags()[0] ? this.platformIdentifier : (String) defaultValue(fields()[0]);
        record.platformDescription = fieldSetFlags()[1] ? this.platformDescription : (String) defaultValue(fields()[1]);
        record.platformSponsor = fieldSetFlags()[2] ? this.platformSponsor : (java.util.List<String>) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
